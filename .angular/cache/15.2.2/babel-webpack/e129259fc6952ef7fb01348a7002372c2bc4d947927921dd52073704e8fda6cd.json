{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./country.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction Exercise3Component_div_27_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 7);\n    i0.ɵɵlistener(\"click\", function Exercise3Component_div_27_span_4_Template_span_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const country_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.updateStates(country_r4));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const country_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(country_r4.description);\n  }\n}\nfunction Exercise3Component_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 3);\n    i0.ɵɵelement(2, \"input\", 4);\n    i0.ɵɵelementStart(3, \"div\", 5);\n    i0.ɵɵtemplate(4, Exercise3Component_div_27_span_4_Template, 2, 1, \"span\", 6);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const countries_r2 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", ctx_r0.country == null ? null : ctx_r0.country.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", countries_r2);\n  }\n}\nfunction Exercise3Component_div_29_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 7);\n    i0.ɵɵlistener(\"click\", function Exercise3Component_div_29_span_4_Template_span_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const s_r9 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.state = s_r9);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"titlecase\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const s_r9 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, s_r9.description));\n  }\n}\nfunction Exercise3Component_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 3);\n    i0.ɵɵelement(2, \"input\", 8);\n    i0.ɵɵelementStart(3, \"div\", 5);\n    i0.ɵɵtemplate(4, Exercise3Component_div_29_span_4_Template, 3, 3, \"span\", 6);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const states_r7 = ctx.ngIf;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", ctx_r1.state == null ? null : ctx_r1.state.description)(\"disabled\", states_r7.length == 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", states_r7);\n  }\n}\nexport class Exercise3Component {\n  constructor(service) {\n    this.service = service;\n    this.countries$ = this.service.getCountries();\n  }\n  updateStates(country) {\n    this.country = country;\n    this.states$ = this.service.getStatesFor(country.id);\n  }\n}\nExercise3Component.ɵfac = function Exercise3Component_Factory(t) {\n  return new (t || Exercise3Component)(i0.ɵɵdirectiveInject(i1.CountryService));\n};\nExercise3Component.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: Exercise3Component,\n  selectors: [[\"app-exercise3\"]],\n  decls: 31,\n  vars: 6,\n  consts: [[\"src\", \"assets/exercise3.gif\"], [\"routerLink\", \"/solution/3\"], [4, \"ngIf\"], [1, \"dropdown\"], [\"type\", \"text\", \"placeholder\", \"Enter country name\", 1, \"dropbtn\", 3, \"value\"], [1, \"dropdown-content\"], [3, \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [\"type\", \"text\", \"placeholder\", \"Enter your state\", 1, \"dropbtn\", 3, \"value\", \"disabled\"]],\n  template: function Exercise3Component_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Exercise 3\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"h3\");\n      i0.ɵɵtext(3, \"Your mission is to update our dropdowns so the user can type a value to filter out the dropdown contents\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"img\", 0);\n      i0.ɵɵelementStart(5, \"ol\")(6, \"li\");\n      i0.ɵɵtext(7, \"If the user types 'Ca' then only the countries that have 'ca' in their name should show up in the list\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"li\");\n      i0.ɵɵtext(9, \"The filter should not be case-sensitive\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"li\");\n      i0.ɵɵtext(11, \"The matching portion of the country name should be rendered in \");\n      i0.ɵɵelementStart(12, \"b\");\n      i0.ɵɵtext(13, \"bold text\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(14, \", for instance: \");\n      i0.ɵɵelementStart(15, \"b\");\n      i0.ɵɵtext(16, \"Ca\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(17, \"nada\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"li\");\n      i0.ɵɵtext(19, \"Do not worry about applying the same behavior to the state dropdown for now. Just make sure that the state dropdown still works after your changes.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"h4\");\n      i0.ɵɵtext(21, \"You can take a look at the expected result here: \");\n      i0.ɵɵelementStart(22, \"a\", 1);\n      i0.ɵɵtext(23, \"http://localhost:4200/solution/3\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(24, \"hr\");\n      i0.ɵɵelementStart(25, \"h2\");\n      i0.ɵɵtext(26, \"Result\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(27, Exercise3Component_div_27_Template, 5, 2, \"div\", 2);\n      i0.ɵɵpipe(28, \"async\");\n      i0.ɵɵtemplate(29, Exercise3Component_div_29_Template, 5, 3, \"div\", 2);\n      i0.ɵɵpipe(30, \"async\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(27);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(28, 2, ctx.countries$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(30, 4, ctx.states$));\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.RouterLink, i2.AsyncPipe, i2.TitleCasePipe],\n  styles: [\".dropbtn[_ngcontent-%COMP%] {\\n  padding: 5px;\\n  font-size: 16px;\\n}\\n\\n.dropdown[_ngcontent-%COMP%] {\\n  position: relative;\\n  display: inline-block;\\n}\\n\\n.dropdown-content[_ngcontent-%COMP%] {\\n  display: none;\\n  position: absolute;\\n  min-width: 160px;\\n  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\\n  z-index: 1;\\n}\\n\\n.dropdown-content[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n  color: black;\\n  padding: 12px 16px;\\n  text-decoration: none;\\n  display: block;\\n  background-color: white;\\n}\\n\\n.dropdown-content[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:hover {background-color: #f1f1f1}\\n\\n.dropdown[_ngcontent-%COMP%]:hover   .dropdown-content[_ngcontent-%COMP%], .dropbtn[_ngcontent-%COMP%]:focus    + .dropdown-content[_ngcontent-%COMP%]{\\n  display: block;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZXhlcmNpc2UzL2V4ZXJjaXNlMy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtFQUNaLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsNENBQTRDO0VBQzVDLFVBQVU7QUFDWjs7QUFFQTtFQUNFLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIscUJBQXFCO0VBQ3JCLGNBQWM7RUFDZCx1QkFBdUI7QUFDekI7O0FBRUEsOEJBQThCLHlCQUF5Qjs7QUFFdkQ7RUFDRSxjQUFjO0FBQ2hCIiwic291cmNlc0NvbnRlbnQiOlsiLmRyb3BidG4ge1xuICBwYWRkaW5nOiA1cHg7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn1cblxuLmRyb3Bkb3duIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi5kcm9wZG93bi1jb250ZW50IHtcbiAgZGlzcGxheTogbm9uZTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBtaW4td2lkdGg6IDE2MHB4O1xuICBib3gtc2hhZG93OiAwcHggOHB4IDE2cHggMHB4IHJnYmEoMCwwLDAsMC4yKTtcbiAgei1pbmRleDogMTtcbn1cblxuLmRyb3Bkb3duLWNvbnRlbnQgc3BhbiB7XG4gIGNvbG9yOiBibGFjaztcbiAgcGFkZGluZzogMTJweCAxNnB4O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbn1cblxuLmRyb3Bkb3duLWNvbnRlbnQgc3Bhbjpob3ZlciB7YmFja2dyb3VuZC1jb2xvcjogI2YxZjFmMX1cblxuLmRyb3Bkb3duOmhvdmVyIC5kcm9wZG93bi1jb250ZW50LCAuZHJvcGJ0bjpmb2N1cyArIC5kcm9wZG93bi1jb250ZW50e1xuICBkaXNwbGF5OiBibG9jaztcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAgBMA,+BAAwE;IAAhCA;MAAA;MAAA;MAAA;MAAA,OAASA,8CAAqB;IAAA,EAAC;IAACA,YAAuB;IAAAA,iBAAO;;;;IAA9BA,eAAuB;IAAvBA,4CAAuB;;;;;IAJrGA,2BAA6C;IAEzCA,2BAAmG;IACnGA,8BAA8B;IAC5BA,4EAAsG;IACxGA,iBAAM;;;;;IAH6BA,eAA8B;IAA9BA,kFAA8B;IAErCA,eAAY;IAAZA,sCAAY;;;;;;IAQtCA,+BAAmD;IAApBA;MAAA;MAAA;MAAA;MAAA;IAAA,EAAmB;IAACA,YAA6B;;IAAAA,iBAAO;;;;IAApCA,eAA6B;IAA7BA,4DAA6B;;;;;IAJtFA,2BAAuC;IAEnCA,2BAA+H;IAC/HA,8BAA8B;IAC5BA,4EAAuF;IACzFA,iBAAM;;;;;IAH6BA,eAA4B;IAA5BA,8EAA4B;IAEzCA,eAAS;IAATA,mCAAS;;;ACdnC,OAAM,MAAOC,kBAAkB;EAO7BC,YAAoBC,OAAuB;IAAvB,YAAO,GAAPA,OAAO;IAL3B,eAAU,GAA0B,IAAI,CAACA,OAAO,CAACC,YAAY,EAAE;EAKhB;EAE/CC,YAAY,CAACC,OAAgB;IAC3B,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,OAAO,GAAG,IAAI,CAACJ,OAAO,CAACK,YAAY,CAACF,OAAO,CAACG,EAAE,CAAC;EACtD;;AAZWR,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAS;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDV/Bd,0BAAI;MAAAA,0BAAU;MAAAA,iBAAK;MACnBA,0BAAI;MAAAA,wHAAwG;MAAAA,iBAAK;MACjHA,yBAAkC;MAClCA,0BAAI;MACEA,sHAAsG;MAAAA,iBAAK;MAC/GA,0BAAI;MAAAA,uDAAuC;MAAAA,iBAAK;MAChDA,2BAAI;MAAAA,gFAA+D;MAAAA,0BAAG;MAAAA,0BAAS;MAAAA,iBAAI;MAAAA,iCAAgB;MAAAA,0BAAG;MAAAA,mBAAE;MAAAA,iBAAI;MAAAA,qBAAI;MAAAA,iBAAK;MACrHA,2BAAI;MAAAA,oKAAmJ;MAAAA,iBAAK;MAE9JA,2BAAI;MAAAA,kEAAiD;MAAAA,6BAA4B;MAAAA,iDAAgC;MAAAA,iBAAI;MACrHA,sBAAI;MACJA,2BAAI;MAAAA,uBAAM;MAAAA,iBAAK;MACfA,qEAOM;;MACNA,qEAOM;;;;MAfAA,gBAAyB;MAAzBA,4DAAyB;MAQzBA,eAAsB;MAAtBA,yDAAsB","names":["i0","Exercise3Component","constructor","service","getCountries","updateStates","country","states$","getStatesFor","id","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/macbook/Documents/PROJETS/angular-certification/ng-advanced-workshop/src/app/exercise3/exercise3.component.html","/Users/macbook/Documents/PROJETS/angular-certification/ng-advanced-workshop/src/app/exercise3/exercise3.component.ts"],"sourcesContent":["<h2>Exercise 3</h2>\n<h3>Your mission is to update our dropdowns so the user can type a value to filter out the dropdown contents</h3>\n<img src=\"assets/exercise3.gif\" />\n<ol>\n  <li>If the user types 'Ca' then only the countries that have 'ca' in their name should show up in the list</li>\n  <li>The filter should not be case-sensitive</li>\n  <li>The matching portion of the country name should be rendered in <b>bold text</b>, for instance: <b>Ca</b>nada</li>\n  <li>Do not worry about applying the same behavior to the state dropdown for now. Just make sure that the state dropdown still works after your changes.</li>\n</ol>\n<h4>You can take a look at the expected result here: <a routerLink=\"/solution/3\">http://localhost:4200/solution/3</a> </h4>\n<hr>\n<h2>Result</h2>\n<div *ngIf=\"countries$ | async as countries\">\n  <div class=\"dropdown\">\n    <input type=\"text\" class=\"dropbtn\" [value]=\"country?.description\" placeholder=\"Enter country name\">\n    <div class=\"dropdown-content\">\n      <span *ngFor=\"let country of countries\" (click)=\"updateStates(country)\">{{country.description}}</span>\n    </div>\n  </div>\n</div>\n<div *ngIf=\"states$ | async as states\">\n  <div class=\"dropdown\">\n    <input type=\"text\" class=\"dropbtn\" [value]=\"state?.description\" [disabled]=\"states.length == 0\" placeholder=\"Enter your state\">\n    <div class=\"dropdown-content\">\n      <span *ngFor=\"let s of states\" (click)=\"state = s\">{{s.description | titlecase}}</span>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Country, State} from './types';\nimport {CountryService} from './country.service';\n\n@Component({\n  selector: 'app-exercise3',\n  templateUrl: './exercise3.component.html',\n  styleUrls: ['./exercise3.component.css']\n})\nexport class Exercise3Component {\n\n  countries$: Observable<Country[]> = this.service.getCountries();\n  states$: Observable<State[]>;\n  country!: Country;\n  state!: State;\n\n  constructor(private service: CountryService) { }\n\n  updateStates(country: Country) {\n    this.country = country;\n    this.states$ = this.service.getStatesFor(country.id);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}