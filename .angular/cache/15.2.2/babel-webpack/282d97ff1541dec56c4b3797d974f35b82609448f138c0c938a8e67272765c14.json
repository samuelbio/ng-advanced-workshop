{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction StateButtonComponent_ng_content_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 0, [\"*ngIf\", \"state == 'initial' \"]);\n  }\n}\nfunction StateButtonComponent_ng_content_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 1, [\"*ngIf\", \"state == 'working'\"]);\n  }\n}\nfunction StateButtonComponent_ng_content_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 2, [\"*ngIf\", \"state == 'done'\"]);\n  }\n}\nconst _c0 = [[[\"\", \"default\", \"\"]], [[\"\", \"working\", \"\"]], [[\"\", \"done\", \"\"]]];\nconst _c1 = [\"[default]\", \"[working]\", \"[done]\"];\nexport class StateButtonComponent {\n  constructor() {\n    this.state = 'initial';\n  }\n  triggerAction() {\n    this.state = 'working';\n    this.action.subscribe(() => this.state = 'done');\n  }\n}\nStateButtonComponent.ɵfac = function StateButtonComponent_Factory(t) {\n  return new (t || StateButtonComponent)();\n};\nStateButtonComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: StateButtonComponent,\n  selectors: [[\"app-state-button\"]],\n  hostBindings: function StateButtonComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function StateButtonComponent_click_HostBindingHandler() {\n        return ctx.triggerAction();\n      });\n    }\n  },\n  inputs: {\n    action: \"action\"\n  },\n  ngContentSelectors: _c1,\n  decls: 3,\n  vars: 3,\n  consts: [[4, \"ngIf\"]],\n  template: function StateButtonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c0);\n      i0.ɵɵtemplate(0, StateButtonComponent_ng_content_0_Template, 1, 0, \"ng-content\", 0);\n      i0.ɵɵtemplate(1, StateButtonComponent_ng_content_1_Template, 1, 0, \"ng-content\", 0);\n      i0.ɵɵtemplate(2, StateButtonComponent_ng_content_2_Template, 1, 0, \"ng-content\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.state == \"initial\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.state == \"working\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.state == \"done\");\n    }\n  },\n  dependencies: [i1.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;IAAAA,uDAAwE;;;;;IACxEA,sDAAuE;;;;;IACvEA,mDAAiE;;;;;ACQjE,OAAM,MAAOC,oBAAoB;EALjCC;IAUE,UAAK,GAAU,SAAS;;EAGxBC,aAAa;IACX,IAAI,CAACC,KAAK,GAAG,SAAS;IACtB,IAAI,CAACC,MAAM,CAACC,SAAS,CAAC,MAAM,IAAI,CAACF,KAAK,GAAG,MAAM,CAAC;EAClD;;AAXWH,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAM;EAAAC;IAAA;;eAApBC,mBAAe;MAAA;;;;;;;;;;;;;MDV5BT,mFAAwE;MACxEA,mFAAuE;MACvEA,mFAAiE;;;MAFjCA,6CAAwB;MACxBA,eAAwB;MAAxBA,6CAAwB;MAC3BA,eAAqB;MAArBA,0CAAqB","names":["i0","StateButtonComponent","constructor","triggerAction","state","action","subscribe","selectors","hostBindings","ctx"],"sourceRoot":"","sources":["/Users/macbook/Documents/PROJETS/angular-certification/ng-advanced-workshop/src/app/solution/solution7/state-button.component.html","/Users/macbook/Documents/PROJETS/angular-certification/ng-advanced-workshop/src/app/solution/solution7/state-button.component.ts"],"sourcesContent":["<ng-content select=\"[default]\" *ngIf=\"state == 'initial' \"></ng-content>\n<ng-content select=\"[working]\" *ngIf=\"state == 'working'\"></ng-content>\n<ng-content select=\"[done]\" *ngIf=\"state == 'done'\"></ng-content>\n","import {Component, HostListener, Input} from '@angular/core';\nimport {Observable} from 'rxjs';\n\ntype State = 'initial' | 'working' | 'done';\n\n@Component({\n  selector: 'app-state-button',\n  templateUrl: './state-button.component.html',\n  styleUrls: ['./state-button.component.css']\n})\nexport class StateButtonComponent<T> {\n\n  @Input()\n  action: Observable<T>;\n\n  state: State = 'initial';\n\n  @HostListener('click')\n  triggerAction() {\n    this.state = 'working';\n    this.action.subscribe(() => this.state = 'done');\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}