{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./country.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nfunction Exercise2Component_div_34_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const country_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", country_r4.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", country_r4.description, \" \");\n  }\n}\nfunction Exercise2Component_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"select\", 4);\n    i0.ɵɵtemplate(4, Exercise2Component_div_34_option_4_Template, 2, 2, \"option\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const countries_r2 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Select one of \", countries_r2.length, \" countries:\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControl\", ctx_r0.countryDropdown);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", countries_r2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Current value: \", ctx_r0.countryDropdown.value, \"\");\n  }\n}\nexport class Exercise2Component {\n  constructor(service) {\n    this.service = service;\n    this.countries$ = this.service.getCountries();\n    this.countryDropdown = new FormControl(null);\n  }\n}\nExercise2Component.ɵfac = function Exercise2Component_Factory(t) {\n  return new (t || Exercise2Component)(i0.ɵɵdirectiveInject(i1.CountryService));\n};\nExercise2Component.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: Exercise2Component,\n  selectors: [[\"app-exercise2\"]],\n  decls: 45,\n  vars: 4,\n  consts: [[\"src\", \"assets/exercise2.gif\"], [\"routerLink\", \"/solution/2\"], [4, \"ngIf\"], [\"statesDropdown\", \"\"], [3, \"formControl\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function Exercise2Component_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Exercise 2\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"h3\");\n      i0.ɵɵtext(3, \"Your mission is to connect the two following dropdowns so that the state/province dropdown gets populated with data from the selected country.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"img\", 0);\n      i0.ɵɵelementStart(5, \"ol\")(6, \"li\");\n      i0.ɵɵtext(7, \"Make sure that the state dropdown is disabled when no country is selected as well as when the selected country has no state information\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"li\");\n      i0.ɵɵtext(9, \"Update the code in \");\n      i0.ɵɵelementStart(10, \"code\");\n      i0.ɵɵtext(11, \"app/exercise2\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(12, \" so that our component loads its list of states from \");\n      i0.ɵɵelementStart(13, \"code\");\n      i0.ɵɵtext(14, \"http://localhost:3000/states?countryCode=US\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(15, \" and use the right country code as a parameter\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"li\");\n      i0.ɵɵtext(17, \"Display the total number of states (for the selected country) in the corresponding \");\n      i0.ɵɵelementStart(18, \"code\");\n      i0.ɵɵtext(19, \"div\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"li\");\n      i0.ɵɵtext(21, \"States should be displayed in alphabetical order and using title case\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"li\");\n      i0.ɵɵtext(23, \"Selecting a state should result in the \");\n      i0.ɵɵelementStart(24, \"code\");\n      i0.ɵɵtext(25, \"code\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(26, \" of the state being set as the dropdown value\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"h4\");\n      i0.ɵɵtext(28, \"You can take a look at the expected result here: \");\n      i0.ɵɵelementStart(29, \"a\", 1);\n      i0.ɵɵtext(30, \"http://localhost:4200/solution/2\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(31, \"hr\");\n      i0.ɵɵelementStart(32, \"h2\");\n      i0.ɵɵtext(33, \"Result\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(34, Exercise2Component_div_34_Template, 7, 4, \"div\", 2);\n      i0.ɵɵpipe(35, \"async\");\n      i0.ɵɵelementStart(36, \"div\")(37, \"div\");\n      i0.ɵɵtext(38, \"Select one of 0 states/provinces:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"select\", null, 3)(41, \"option\");\n      i0.ɵɵtext(42, \" State or province \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(43, \"div\");\n      i0.ɵɵtext(44);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(40);\n      i0.ɵɵadvance(34);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(35, 2, ctx.countries$));\n      i0.ɵɵadvance(10);\n      i0.ɵɵtextInterpolate1(\"Current value: \", _r1.value, \"\");\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.RouterLink, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.FormControlDirective, i2.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAIA,SAAQA,WAAW,QAAO,gBAAgB;;;;;;;;ICYtCC,iCAA+D;IAC7DA,YACF;IAAAA,iBAAS;;;;IAFiCA,qCAAoB;IAC5DA,eACF;IADEA,uDACF;;;;;IALJA,2BAA6C;IACtCA,YAA6C;IAAAA,iBAAM;IACxDA,iCAAwC;IACtCA,gFAES;IACXA,iBAAS;IACTA,2BAAK;IAAAA,YAAwC;IAAAA,iBAAM;;;;;IAN9CA,eAA6C;IAA7CA,2EAA6C;IAC1CA,eAA+B;IAA/BA,oDAA+B;IACTA,eAAY;IAAZA,sCAAY;IAIrCA,eAAwC;IAAxCA,0EAAwC;;;ADT/C,OAAM,MAAOC,kBAAkB;EAK7BC,YAAoBC,OAAuB;IAAvB,YAAO,GAAPA,OAAO;IAH3B,eAAU,GAA0B,IAAI,CAACA,OAAO,CAACC,YAAY,EAAE;IAC/D,oBAAe,GAAG,IAAIL,WAAW,CAAgB,IAAI,CAAC;EAEP;;AALpCE,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAI;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX/BT,0BAAI;MAAAA,0BAAU;MAAAA,iBAAK;MACnBA,0BAAI;MAAAA,8JAA8I;MAAAA,iBAAK;MACvJA,yBAAkC;MAClCA,0BAAI;MACEA,uJAAuI;MAAAA,iBAAK;MAChJA,0BAAI;MAAAA,mCAAmB;MAAAA,6BAAM;MAAAA,8BAAa;MAAAA,iBAAO;MAACA,sEAAoD;MAAAA,6BAAM;MAAAA,4DAA2C;MAAAA,iBAAO;MAACA,+DAA6C;MAAAA,iBAAK;MACjNA,2BAAI;MAAAA,oGAAmF;MAAAA,6BAAM;MAAAA,oBAAG;MAAAA,iBAAO;MACvGA,2BAAI;MAAAA,sFAAqE;MAAAA,iBAAK;MAC9EA,2BAAI;MAAAA,wDAAuC;MAAAA,6BAAM;MAAAA,qBAAI;MAAAA,iBAAO;MAACA,8DAA4C;MAAAA,iBAAK;MAEhHA,2BAAI;MAAAA,kEAAiD;MAAAA,6BAA4B;MAAAA,iDAAgC;MAAAA,iBAAI;MACrHA,sBAAI;MACJA,2BAAI;MAAAA,uBAAM;MAAAA,iBAAK;MACfA,qEAQM;;MACNA,4BAAK;MACEA,kDAAiC;MAAAA,iBAAM;MAC5CA,wCAAwB;MAEpBA,oCACF;MAAAA,iBAAS;MAEXA,4BAAK;MAAAA,aAAuC;MAAAA,iBAAM;;;;MAhB9CA,gBAAyB;MAAzBA,4DAAyB;MAgBxBA,gBAAuC;MAAvCA,uDAAuC","names":["FormControl","i0","Exercise2Component","constructor","service","getCountries","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/macbook/Documents/PROJETS/angular-certification/ng-advanced-workshop/src/app/exercise2/exercise2.component.ts","/Users/macbook/Documents/PROJETS/angular-certification/ng-advanced-workshop/src/app/exercise2/exercise2.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Country} from './types';\nimport {CountryService} from './country.service';\nimport {FormControl} from '@angular/forms';\n\n@Component({\n  selector: 'app-exercise2',\n  templateUrl: './exercise2.component.html',\n  styleUrls: ['./exercise2.component.css']\n})\nexport class Exercise2Component {\n\n  countries$: Observable<Country[]> = this.service.getCountries();\n  countryDropdown = new FormControl<Country['id']>(null);\n\n  constructor(private service: CountryService) { }\n\n}\n","<h2>Exercise 2</h2>\n<h3>Your mission is to connect the two following dropdowns so that the state/province dropdown gets populated with data from the selected country.</h3>\n<img src=\"assets/exercise2.gif\" />\n<ol>\n  <li>Make sure that the state dropdown is disabled when no country is selected as well as when the selected country has no state information</li>\n  <li>Update the code in <code>app/exercise2</code> so that our component loads its list of states from <code>http://localhost:3000/states?countryCode=US</code> and use the right country code as a parameter</li>\n  <li>Display the total number of states (for the selected country) in the corresponding <code>div</code></li>\n  <li>States should be displayed in alphabetical order and using title case</li>\n  <li>Selecting a state should result in the <code>code</code> of the state being set as the dropdown value</li>\n</ol>\n<h4>You can take a look at the expected result here: <a routerLink=\"/solution/2\">http://localhost:4200/solution/2</a> </h4>\n<hr>\n<h2>Result</h2>\n<div *ngIf=\"countries$ | async as countries\">\n  <div>Select one of {{countries.length}} countries:</div>\n  <select [formControl]=\"countryDropdown\">\n    <option *ngFor=\"let country of countries\" [value]=\"country.id\">\n      {{country.description}}\n    </option>\n  </select>\n  <div>Current value: {{countryDropdown.value}}</div>\n</div>\n<div>\n  <div>Select one of 0 states/provinces:</div>\n  <select #statesDropdown>\n    <option>\n      State or province\n    </option>\n  </select>\n  <div>Current value: {{statesDropdown.value}}</div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}