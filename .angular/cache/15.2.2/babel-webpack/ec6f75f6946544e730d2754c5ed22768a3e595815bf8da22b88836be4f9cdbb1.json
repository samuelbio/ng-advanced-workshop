{"ast":null,"code":"import { timer } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class Exercise7Component {\n  constructor() {\n    this.action$ = timer(2000);\n  }\n}\nExercise7Component.ɵfac = function Exercise7Component_Factory(t) {\n  return new (t || Exercise7Component)();\n};\nExercise7Component.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: Exercise7Component,\n  selectors: [[\"app-exercise7\"]],\n  decls: 34,\n  vars: 0,\n  consts: [[\"src\", \"assets/exercise7.gif\"], [\"routerLink\", \"/solution/7\"], [\"href\", \"javascript:\"]],\n  template: function Exercise7Component_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Exercise 7\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"h3\");\n      i0.ɵɵtext(3, \"Your mission is to customize the previous solution even further by being able to provide three different HTML elements for every single state\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"img\", 0);\n      i0.ɵɵelementStart(5, \"ol\")(6, \"li\");\n      i0.ɵɵtext(7, \"For instance, I could use that solution to initially display a \");\n      i0.ɵɵelementStart(8, \"code\");\n      i0.ɵɵtext(9, \"Save\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(10, \" button\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"li\");\n      i0.ɵɵtext(12, \"Then the button becomes a spinner image when clicked\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"li\");\n      i0.ɵɵtext(14, \"Finally, the element becomes a disabled button with a different background color upon completion of the action\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"li\");\n      i0.ɵɵtext(16, \"Your solution should work on any clickable HTML element, and the rendered states should be fully customizable (template, style, etc.)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"li\");\n      i0.ɵɵtext(18, \"A sample spinner image can be used to test your intermediate state: \");\n      i0.ɵɵelementStart(19, \"code\");\n      i0.ɵɵtext(20, \"assets/loader.gif\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(21, \"h4\");\n      i0.ɵɵtext(22, \"You can take a look at the expected result here: \");\n      i0.ɵɵelementStart(23, \"a\", 1);\n      i0.ɵɵtext(24, \"http://localhost:4200/solution/7\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(25, \"hr\");\n      i0.ɵɵelementStart(26, \"h2\");\n      i0.ɵɵtext(27, \"Result\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"button\");\n      i0.ɵɵtext(29, \"Save\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"br\")(31, \"br\");\n      i0.ɵɵelementStart(32, \"a\", 2);\n      i0.ɵɵtext(33, \"Save from a link\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  dependencies: [i1.RouterLink],\n  styles: [\"button[_ngcontent-%COMP%] {\\n  background-color: #1976d2;\\n  color: white;\\n  font-size: 16px;\\n  font-weight: bold;\\n  padding: 6px 21px;\\n  border: none;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZXhlcmNpc2U3L2V4ZXJjaXNlNy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQXlCO0VBQ3pCLFlBQVk7RUFDWixlQUFlO0VBQ2YsaUJBQWlCO0VBQ2pCLGlCQUFpQjtFQUNqQixZQUFZO0FBQ2QiLCJzb3VyY2VzQ29udGVudCI6WyJidXR0b24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTk3NmQyO1xuICBjb2xvcjogd2hpdGU7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIHBhZGRpbmc6IDZweCAyMXB4O1xuICBib3JkZXI6IG5vbmU7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AACA,SAAQA,KAAK,QAAO,MAAM;;;AAO1B,OAAM,MAAOC,kBAAkB;EAL/BC;IAOE,YAAO,GAAGF,KAAK,CAAC,IAAI,CAAC;;;AAFVC,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAE;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCR/BC,0BAAI;MAAAA,0BAAU;MAAAA,iBAAK;MACnBA,0BAAI;MAAAA,6JAA6I;MAAAA,iBAAK;MACtJA,yBAAkC;MAClCA,0BAAI;MACEA,+EAA+D;MAAAA,4BAAM;MAAAA,oBAAI;MAAAA,iBAAO;MAACA,wBAAM;MAAAA,iBAAK;MAChGA,2BAAI;MAAAA,qEAAoD;MAAAA,iBAAK;MAC7DA,2BAAI;MAAAA,+HAA8G;MAAAA,iBAAK;MACvHA,2BAAI;MAAAA,sJAAqI;MAAAA,iBAAK;MAC9IA,2BAAI;MAAAA,qFAAoE;MAAAA,6BAAM;MAAAA,kCAAiB;MAAAA,iBAAO;MAExGA,2BAAI;MAAAA,kEAAiD;MAAAA,6BAA4B;MAAAA,iDAAgC;MAAAA,iBAAI;MACrHA,sBAAI;MACJA,2BAAI;MAAAA,uBAAM;MAAAA,iBAAK;MACfA,+BAAQ;MAAAA,qBAAI;MAAAA,iBAAS;MACrBA,sBAAI;MACJA,6BAAsB;MAAAA,iCAAgB;MAAAA,iBAAI","names":["timer","Exercise7Component","constructor","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/Users/macbook/Documents/PROJETS/angular-certification/ng-advanced-workshop/src/app/exercise7/exercise7.component.ts","/Users/macbook/Documents/PROJETS/angular-certification/ng-advanced-workshop/src/app/exercise7/exercise7.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {timer} from 'rxjs';\n\n@Component({\n  selector: 'app-exercise7',\n  templateUrl: './exercise7.component.html',\n  styleUrls: ['./exercise7.component.css']\n})\nexport class Exercise7Component {\n\n  action$ = timer(2000);\n\n}\n","<h2>Exercise 7</h2>\n<h3>Your mission is to customize the previous solution even further by being able to provide three different HTML elements for every single state</h3>\n<img src=\"assets/exercise7.gif\" />\n<ol>\n  <li>For instance, I could use that solution to initially display a <code>Save</code> button</li>\n  <li>Then the button becomes a spinner image when clicked</li>\n  <li>Finally, the element becomes a disabled button with a different background color upon completion of the action</li>\n  <li>Your solution should work on any clickable HTML element, and the rendered states should be fully customizable (template, style, etc.)</li>\n  <li>A sample spinner image can be used to test your intermediate state: <code>assets/loader.gif</code></li>\n</ol>\n<h4>You can take a look at the expected result here: <a routerLink=\"/solution/7\">http://localhost:4200/solution/7</a> </h4>\n<hr>\n<h2>Result</h2>\n<button>Save</button>\n<br> <br>\n<a href=\"javascript:\">Save from a link</a>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}