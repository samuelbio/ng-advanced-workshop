{"ast":null,"code":"import { combineLatest, of, Subject } from 'rxjs';\nimport { FormControl } from '@angular/forms';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./country.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../solution/solution3/highlight.pipe\";\nfunction Exercise5Component_div_30_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵlistener(\"click\", function Exercise5Component_div_30_span_1_Template_span_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const country_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.updateStates(country_r4));\n    });\n    i0.ɵɵpipe(1, \"highlight\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const country_r4 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind2(1, 1, country_r4.description, ctx_r3.countryControl.value), i0.ɵɵsanitizeHtml);\n  }\n}\nfunction Exercise5Component_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtemplate(1, Exercise5Component_div_30_span_1_Template, 2, 4, \"span\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const countries_r2 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", countries_r2);\n  }\n}\nfunction Exercise5Component_div_35_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵlistener(\"click\", function Exercise5Component_div_35_span_1_Template_span_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const s_r9 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.stateControl.setValue(s_r9.description));\n    });\n    i0.ɵɵpipe(1, \"highlight\");\n    i0.ɵɵpipe(2, \"titlecase\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const s_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind2(1, 1, i0.ɵɵpipeBind1(2, 4, s_r9.description), ctx_r8.stateControl.value), i0.ɵɵsanitizeHtml);\n  }\n}\nfunction Exercise5Component_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtemplate(1, Exercise5Component_div_35_span_1_Template, 3, 6, \"span\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const states_r7 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", states_r7);\n  }\n}\nexport class Exercise5Component {\n  constructor(service) {\n    this.service = service;\n    this.currentCountry$ = new Subject();\n    this.statesForCountry$ = of([]);\n    this.countryControl = new FormControl('');\n    this.stateControl = new FormControl('');\n    this.countries$ = combineLatest([this.countryControl.valueChanges, this.service.getCountries()]).pipe(map(([userInput, countries]) => countries.filter(c => c.description.toLowerCase().indexOf(userInput.toLowerCase()) !== -1)));\n    this.statesForCountry$ = this.currentCountry$.asObservable().pipe(tap(console.log), switchMap(cntry => this.service.getStatesFor(cntry.id)));\n    this.states$ = combineLatest([this.stateControl.valueChanges, this.statesForCountry$]).pipe(map(([userInput, states]) => states.filter(c => c.description.toLowerCase().indexOf(userInput.toLowerCase()) !== -1)));\n  }\n  updateStates(country) {\n    this.countryControl.setValue(country.description);\n    this.stateControl.setValue('');\n    this.currentCountry$.next(country);\n  }\n}\nExercise5Component.ɵfac = function Exercise5Component_Factory(t) {\n  return new (t || Exercise5Component)(i0.ɵɵdirectiveInject(i1.CountryService));\n};\nExercise5Component.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: Exercise5Component,\n  selectors: [[\"app-exercise5\"]],\n  decls: 37,\n  vars: 8,\n  consts: [[\"src\", \"assets/exercise5.gif\"], [\"routerLink\", \"/solution/5\"], [1, \"dropdown\"], [\"type\", \"text\", \"placeholder\", \"Enter country name\", 1, \"dropbtn\", 3, \"formControl\"], [\"class\", \"dropdown-content\", 4, \"ngIf\"], [\"type\", \"text\", \"placeholder\", \"Enter your state\", 1, \"dropbtn\", 3, \"formControl\"], [1, \"dropdown-content\"], [3, \"innerHTML\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"innerHTML\", \"click\"]],\n  template: function Exercise5Component_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Exercise 5\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"h3\");\n      i0.ɵɵtext(3, \"Your mission is to refactor our two dropdowns code into one component\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"img\", 0);\n      i0.ɵɵelementStart(5, \"ol\")(6, \"li\");\n      i0.ɵɵtext(7, \"The code for both our country and state dropdowns is very similar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"li\");\n      i0.ɵɵtext(9, \"Create a component that refactors the behavior of those dropdowns in one single reusable component\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"li\");\n      i0.ɵɵtext(11, \"Then use two instances of that component, one for country selection, one for state selection\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"li\");\n      i0.ɵɵtext(13, \"Render both currently selected \");\n      i0.ɵɵelementStart(14, \"code\");\n      i0.ɵɵtext(15, \"country\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(16, \" and \");\n      i0.ɵɵelementStart(17, \"code\");\n      i0.ɵɵtext(18, \"state\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(19, \" as JSON below the dropdowns\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"h4\");\n      i0.ɵɵtext(21, \"You can take a look at the expected result here: \");\n      i0.ɵɵelementStart(22, \"a\", 1);\n      i0.ɵɵtext(23, \"http://localhost:4200/solution/5\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(24, \"hr\");\n      i0.ɵɵelementStart(25, \"h2\");\n      i0.ɵɵtext(26, \"Result\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"div\")(28, \"div\", 2);\n      i0.ɵɵelement(29, \"input\", 3);\n      i0.ɵɵtemplate(30, Exercise5Component_div_30_Template, 2, 1, \"div\", 4);\n      i0.ɵɵpipe(31, \"async\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(32, \"div\")(33, \"div\", 2);\n      i0.ɵɵelement(34, \"input\", 5);\n      i0.ɵɵtemplate(35, Exercise5Component_div_35_Template, 2, 1, \"div\", 4);\n      i0.ɵɵpipe(36, \"async\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(29);\n      i0.ɵɵproperty(\"formControl\", ctx.countryControl);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(31, 4, ctx.countries$));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formControl\", ctx.stateControl);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(36, 6, ctx.states$));\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.RouterLink, i4.DefaultValueAccessor, i4.NgControlStatus, i4.FormControlDirective, i2.AsyncPipe, i2.TitleCasePipe, i5.HighlightPipe],\n  styles: [\".dropbtn[_ngcontent-%COMP%] {\\n  padding: 5px;\\n  font-size: 16px;\\n}\\n\\n.dropdown[_ngcontent-%COMP%] {\\n  position: relative;\\n  display: inline-block;\\n}\\n\\n.dropdown-content[_ngcontent-%COMP%] {\\n  display: none;\\n  position: absolute;\\n  min-width: 160px;\\n  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\\n  z-index: 1;\\n}\\n\\n.dropdown-content[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n  color: black;\\n  padding: 12px 16px;\\n  text-decoration: none;\\n  display: block;\\n  background-color: white;\\n}\\n\\n.dropdown-content[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:hover {background-color: #f1f1f1}\\n\\n.dropdown[_ngcontent-%COMP%]:hover   .dropdown-content[_ngcontent-%COMP%], .dropbtn[_ngcontent-%COMP%]:focus    + .dropdown-content[_ngcontent-%COMP%]{\\n  display: block;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZXhlcmNpc2U1L2V4ZXJjaXNlNS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtFQUNaLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsNENBQTRDO0VBQzVDLFVBQVU7QUFDWjs7QUFFQTtFQUNFLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIscUJBQXFCO0VBQ3JCLGNBQWM7RUFDZCx1QkFBdUI7QUFDekI7O0FBRUEsOEJBQThCLHlCQUF5Qjs7QUFFdkQ7RUFDRSxjQUFjO0FBQ2hCIiwic291cmNlc0NvbnRlbnQiOlsiLmRyb3BidG4ge1xuICBwYWRkaW5nOiA1cHg7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn1cblxuLmRyb3Bkb3duIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi5kcm9wZG93bi1jb250ZW50IHtcbiAgZGlzcGxheTogbm9uZTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBtaW4td2lkdGg6IDE2MHB4O1xuICBib3gtc2hhZG93OiAwcHggOHB4IDE2cHggMHB4IHJnYmEoMCwwLDAsMC4yKTtcbiAgei1pbmRleDogMTtcbn1cblxuLmRyb3Bkb3duLWNvbnRlbnQgc3BhbiB7XG4gIGNvbG9yOiBibGFjaztcbiAgcGFkZGluZzogMTJweCAxNnB4O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbn1cblxuLmRyb3Bkb3duLWNvbnRlbnQgc3Bhbjpob3ZlciB7YmFja2dyb3VuZC1jb2xvcjogI2YxZjFmMX1cblxuLmRyb3Bkb3duOmhvdmVyIC5kcm9wZG93bi1jb250ZW50LCAuZHJvcGJ0bjpmb2N1cyArIC5kcm9wZG93bi1jb250ZW50e1xuICBkaXNwbGF5OiBibG9jaztcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["combineLatest","of","Subject","FormControl","map","switchMap","tap","i0","Exercise5Component","constructor","service","countries$","countryControl","valueChanges","getCountries","pipe","userInput","countries","filter","c","description","toLowerCase","indexOf","statesForCountry$","currentCountry$","asObservable","console","log","cntry","getStatesFor","id","states$","stateControl","states","updateStates","country","setValue","next","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/macbook/Documents/PROJETS/angular-certification/ng-advanced-workshop/src/app/exercise5/exercise5.component.ts","/Users/macbook/Documents/PROJETS/angular-certification/ng-advanced-workshop/src/app/exercise5/exercise5.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {combineLatest, Observable, of, Subject} from 'rxjs';\nimport {Country, State} from './types';\nimport {FormControl} from '@angular/forms';\nimport {CountryService} from './country.service';\nimport {map, switchMap, tap} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-exercise5',\n  templateUrl: './exercise5.component.html',\n  styleUrls: ['./exercise5.component.css']\n})\nexport class Exercise5Component {\n\n  countries$: Observable<Country[]>;\n  currentCountry$ = new Subject<Country>();\n  states$: Observable<State[]>;\n  statesForCountry$: Observable<State[]> =  of([]);\n  state: State;\n  countryControl = new FormControl('');\n  stateControl = new FormControl('');\n\n  constructor(private service: CountryService) {\n    this.countries$ = combineLatest([this.countryControl.valueChanges, this.service.getCountries()]).pipe(\n      map(([userInput, countries]) => countries.filter(c => c.description.toLowerCase().indexOf(userInput.toLowerCase()) !== -1))\n    );\n    this.statesForCountry$ = this.currentCountry$.asObservable().pipe(\n      tap(console.log),\n      switchMap(cntry => this.service.getStatesFor(cntry.id))\n    );\n    this.states$ = combineLatest([this.stateControl.valueChanges, this.statesForCountry$]).pipe(\n      map(([userInput, states]) => states.filter(c => c.description.toLowerCase().indexOf(userInput.toLowerCase()) !== -1))\n    );\n  }\n\n  updateStates(country: Country) {\n    this.countryControl.setValue(country.description);\n    this.stateControl.setValue('');\n    this.currentCountry$.next(country);\n  }\n\n}\n","<h2>Exercise 5</h2>\n<h3>Your mission is to refactor our two dropdowns code into one component</h3>\n<img src=\"assets/exercise5.gif\" />\n<ol>\n  <li>The code for both our country and state dropdowns is very similar</li>\n  <li>Create a component that refactors the behavior of those dropdowns in one single reusable component</li>\n  <li>Then use two instances of that component, one for country selection, one for state selection</li>\n  <li>Render both currently selected <code>country</code> and <code>state</code> as JSON below the dropdowns</li>\n</ol>\n<h4>You can take a look at the expected result here: <a routerLink=\"/solution/5\">http://localhost:4200/solution/5</a> </h4>\n<hr>\n<h2>Result</h2>\n<div >\n  <div class=\"dropdown\">\n    <input type=\"text\" class=\"dropbtn\" [formControl]=\"countryControl\"\n           placeholder=\"Enter country name\" >\n    <div class=\"dropdown-content\" *ngIf=\"countries$ | async as countries\">\n      <span *ngFor=\"let country of countries\" (click)=\"updateStates(country)\"\n            [innerHTML]=\"country.description | highlight: countryControl.value\">\n      </span>\n    </div>\n  </div>\n</div>\n<div >\n  <div class=\"dropdown\">\n    <input type=\"text\" class=\"dropbtn\" [formControl]=\"stateControl\"\n           placeholder=\"Enter your state\">\n    <div class=\"dropdown-content\" *ngIf=\"states$ | async as states\">\n      <span *ngFor=\"let s of states\" (click)=\"stateControl.setValue(s.description)\"\n            [innerHTML]=\"s.description | titlecase | highlight: stateControl.value\">\n      </span>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}